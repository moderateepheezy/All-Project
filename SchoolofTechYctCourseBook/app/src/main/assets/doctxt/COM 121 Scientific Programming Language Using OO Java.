Identify the basic components of Java programs. □ Distinguish two types of Java constructs Application

and applets. □ Differentiate between object declaration and object creation. □ Describe the process of

creating and running Java programs. □Apply main window and message Box classes. □Apply graphic

classes. Select proper type of numerical data. □Educate arithmetic expressions using precedence rides. □

Describe how memory allocation works for objects and primitive data value. Write programs that

input/output data using input and Box and out box. Apply the incremental development technique in

writing programs. Describe how integer and real numbers are represented in memory. Define variables

Define and classes value- returning method. Distinguish between private and public data.

Describe parameter passing in method definitions. Define applet with multiple methods. Incorporate a

simple event handling routine to as applet to process input. Construct input processing applets. Convert

string data to numerical data. Apply the reserved word “This”. Implement the IF statement. Apply switch

statement. Write Boolean expressions using relational and Boolean operations. Nested IF statements

correctly. Apply list Box and color class. Apply while statement. Apply DO-while statement. Apply for

statement. Apply Next LOOP statement Apply the repose Box class Format output data using format class.

Write simple recursive methods. Describe and manipulate character data type. Differentiate between

string and string buffer classes. Distinguish between the primitive and reference data types. Differentiate

between equality and equivalence testing for string objects. Show how objects passed to methods and

returns from method. Manipulate a collection of data values using array. Declare and use arrav of

primitive data type. Declare and use array of objects. Implement 2- dimensional array as an array of

arrays. Manipulate objects using vectors. Input array of strings using multi Input Box. Define methods

that accept array as parameters and methods that return array. Apply self-reference pointers in methods.

Place buttons on a Frame. Handle events. Place text field objects on a Frame Write menus. Handle mouse

events. Handle other GUI events. Define classes, inheritance and polymorphism. Define classes with

inheritance. Apply classes effectively with polymorphism. State the rules of inheritance and accessibility.

Apply inheritance variables. Explain how constructors of a class are affected by inheritance. Create

instances of abstract super classes and write abstract methods. Write programs involving inheritance and

polymorphism. Questions and answer session. Defense of programming project.